/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from 'bn.js'
import { ContractOptions } from 'web3-eth-contract'
import { EventLog } from 'web3-core'
import { EventEmitter } from 'events'
import {
    Callback,
    PayableTransactionObject,
    NonPayableTransactionObject,
    BlockType,
    ContractEventLog,
    BaseContract,
} from './types'

interface EventOptions {
    filter?: object
    fromBlock?: BlockType
    topics?: string[]
}

export interface ArtBlocksMinterContract extends BaseContract {
    constructor(jsonInterface: any[], address?: string, options?: ContractOptions): ArtBlocksMinterContract
    clone(): ArtBlocksMinterContract
    methods: {
        artblocksContract(): NonPayableTransactionObject<string>

        artistSetBonusContractAddress(
            _projectId: number | string | BN,
            _bonusContractAddress: string,
        ): NonPayableTransactionObject<void>

        artistToggleBonus(_projectId: number | string | BN): NonPayableTransactionObject<void>

        checkYourAllowanceOfProjectERC20(_projectId: number | string | BN): NonPayableTransactionObject<string>

        contractFilterProject(arg0: number | string | BN): NonPayableTransactionObject<boolean>

        getYourBalanceOfProjectERC20(_projectId: number | string | BN): NonPayableTransactionObject<string>

        projectIdToBonus(arg0: number | string | BN): NonPayableTransactionObject<boolean>

        projectIdToBonusContractAddress(arg0: number | string | BN): NonPayableTransactionObject<string>

        projectMaxHasBeenInvoked(arg0: number | string | BN): NonPayableTransactionObject<boolean>

        projectMaxInvocations(arg0: number | string | BN): NonPayableTransactionObject<string>

        projectMintCounter(arg0: string, arg1: number | string | BN): NonPayableTransactionObject<string>

        projectMintLimit(arg0: number | string | BN): NonPayableTransactionObject<string>

        purchase(_projectId: number | string | BN): PayableTransactionObject<string>

        setProjectMaxInvocations(_projectId: number | string | BN): NonPayableTransactionObject<void>

        setProjectMintLimit(
            _projectId: number | string | BN,
            _limit: number | string | BN,
        ): NonPayableTransactionObject<void>

        toggleContractFilter(_projectId: number | string | BN): NonPayableTransactionObject<void>
    }
    events: {
        allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter
    }
}
