/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type BN from 'bn.js'
import type { ContractOptions } from 'web3-eth-contract'
import type { EventLog } from 'web3-core'
import type { EventEmitter } from 'events'
import type {
    Callback,
    PayableTransactionObject,
    NonPayableTransactionObject,
    BlockType,
    ContractEventLog,
    BaseContract,
} from './types.js'

export interface EventOptions {
    filter?: object
    fromBlock?: BlockType
    topics?: string[]
}

export interface DODORouteProxy extends BaseContract {
    constructor(jsonInterface: any[], address?: string, options?: ContractOptions): DODORouteProxy
    clone(): DODORouteProxy
    methods: {
        'dodoMutliSwap(uint256,uint256,uint256[],uint256[],address[],address[],bytes[],uint256)'(
            fromTokenAmount: number | string | BN,
            minReturnAmount: number | string | BN,
            totalWeight: (number | string | BN)[],
            splitNumber: (number | string | BN)[],
            midToken: string[],
            assetFrom: string[],
            sequence: (string | number[])[],
            deadLine: number | string | BN,
        ): PayableTransactionObject<string>

        'dodoMutliSwap(uint256,uint256,uint256[],uint256[],address[],address[],bytes[],uint256)'(
            fromTokenAmount: number | string | BN,
            minReturnAmount: number | string | BN,
            totalWeight: (number | string | BN)[],
            splitNumber: (number | string | BN)[],
            midToken: string[],
            assetFrom: string[],
            sequence: (string | number[])[],
            deadLine: number | string | BN,
        ): PayableTransactionObject<string>

        mixSwap(
            fromToken: string,
            toToken: string,
            fromTokenAmount: number | string | BN,
            minReturnAmount: number | string | BN,
            mixAdapters: string[],
            mixPairs: string[],
            assetTo: string[],
            directions: number | string | BN,
            moreInfos: (string | number[])[],
            deadLine: number | string | BN,
        ): PayableTransactionObject<string>

        dodoSwapV2TokenToETH(
            fromToken: string,
            fromTokenAmount: number | string | BN,
            minReturnAmount: number | string | BN,
            dodoPairs: string[],
            directions: number | string | BN,
            isIncentive: boolean,
            deadLine: number | string | BN,
        ): PayableTransactionObject<string>
    }
    events: {
        allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter
    }
}
