/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from 'bn.js'
import { ContractOptions } from 'web3-eth-contract'
import { EventLog } from 'web3-core'
import { EventEmitter } from 'events'
import {
    Callback,
    PayableTransactionObject,
    NonPayableTransactionObject,
    BlockType,
    ContractEventLog,
    BaseContract,
} from './types'

interface EventOptions {
    filter?: object
    fromBlock?: BlockType
    topics?: string[]
}

export interface PoolStateV3 extends BaseContract {
    constructor(jsonInterface: any[], address?: string, options?: ContractOptions): PoolStateV3
    clone(): PoolStateV3
    methods: {
        feeGrowthGlobal0X128(): NonPayableTransactionObject<string>

        feeGrowthGlobal1X128(): NonPayableTransactionObject<string>

        liquidity(): NonPayableTransactionObject<string>

        observations(index: number | string | BN): NonPayableTransactionObject<{
            blockTimestamp: string
            tickCumulative: string
            secondsPerLiquidityCumulativeX128: string
            initialized: boolean
            0: string
            1: string
            2: string
            3: boolean
        }>

        positions(key: string | number[]): NonPayableTransactionObject<{
            _liquidity: string
            feeGrowthInside0LastX128: string
            feeGrowthInside1LastX128: string
            tokensOwed0: string
            tokensOwed1: string
            0: string
            1: string
            2: string
            3: string
            4: string
        }>

        protocolFees(): NonPayableTransactionObject<{
            token0: string
            token1: string
            0: string
            1: string
        }>

        slot0(): NonPayableTransactionObject<{
            sqrtPriceX96: string
            tick: string
            observationIndex: string
            observationCardinality: string
            observationCardinalityNext: string
            feeProtocol: string
            unlocked: boolean
            0: string
            1: string
            2: string
            3: string
            4: string
            5: string
            6: boolean
        }>

        tickBitmap(wordPosition: number | string | BN): NonPayableTransactionObject<string>

        ticks(tick: number | string | BN): NonPayableTransactionObject<{
            liquidityGross: string
            liquidityNet: string
            feeGrowthOutside0X128: string
            feeGrowthOutside1X128: string
            tickCumulativeOutside: string
            secondsPerLiquidityOutsideX128: string
            secondsOutside: string
            initialized: boolean
            0: string
            1: string
            2: string
            3: string
            4: string
            5: string
            6: string
            7: boolean
        }>
    }
    events: {
        allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter
    }
}
