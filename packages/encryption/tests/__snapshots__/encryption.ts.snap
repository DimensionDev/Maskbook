// Vitest Snapshot v1

exports[`v37 E2E encryption > append target to joey 1`] = `
Map {
  ProfileIdentifier {
    "network": "localhost",
    "userId": "joey",
  } => {
    "status": "fulfilled",
    "value": {
      "encryptedPostKey": Uint8Array [
        166,
        157,
        181,
        130,
        208,
        221,
        181,
        12,
        77,
        85,
        98,
        94,
        146,
        248,
        98,
        239,
        101,
        98,
        124,
        233,
        173,
        224,
        37,
        52,
        11,
        10,
        45,
        19,
        10,
        195,
        170,
        102,
        38,
        59,
        150,
        128,
        59,
        92,
        93,
        113,
        48,
        136,
        157,
        145,
        250,
        138,
        227,
        218,
      ],
      "ephemeralPublicKey": CryptoKey {},
      "target": ProfileIdentifier {
        "network": "localhost",
        "userId": "joey",
      },
    },
  },
}
`;

exports[`v37 E2E encryption > decrypted as author 1`] = `
[
  {
    "event": "E2E",
    "type": "progress",
  },
  {
    "content": {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v37 E2E encryption > decrypted as jack 1`] = `
[
  {
    "event": "E2E",
    "type": "progress",
  },
  {
    "content": {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v37 E2E encryption > decrypted as joey 1`] = `
[
  {
    "event": "E2E",
    "type": "progress",
  },
  {
    "content": {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v37 E2E encryption > encrypted 1`] = `
{
  "author": ProfileIdentifier {
    "network": "localhost",
    "userId": "bob",
  },
  "e2e": Map {
    ProfileIdentifier {
      "network": "localhost",
      "userId": "jack",
    } => {
      "status": "fulfilled",
      "value": {
        "encryptedPostKey": Uint8Array [
          46,
          253,
          212,
          176,
          179,
          14,
          99,
          126,
          10,
          84,
          119,
          38,
          158,
          159,
          254,
          6,
          3,
          115,
          157,
          11,
          45,
          195,
          129,
          178,
          10,
          194,
          86,
          207,
          137,
          123,
          130,
          44,
          198,
          168,
          38,
          48,
          57,
          191,
          138,
          86,
          199,
          35,
          82,
          139,
          137,
          25,
          163,
          54,
        ],
        "target": ProfileIdentifier {
          "network": "localhost",
          "userId": "jack",
        },
      },
    },
  },
  "identifier": PostIVIdentifier {
    "network": "localhost",
    "postIV": "Z/9AS037AaQi7QQQfq+OIw==",
  },
  "output": Uint8Array [
    0,
    151,
    0,
    169,
    108,
    111,
    99,
    97,
    108,
    104,
    111,
    115,
    116,
    163,
    98,
    111,
    98,
    2,
    196,
    33,
    3,
    251,
    221,
    26,
    25,
    238,
    180,
    132,
    228,
    76,
    237,
    118,
    12,
    20,
    31,
    241,
    133,
    180,
    190,
    242,
    235,
    137,
    152,
    160,
    82,
    5,
    76,
    183,
    228,
    84,
    135,
    22,
    191,
    148,
    1,
    196,
    48,
    227,
    181,
    31,
    230,
    197,
    123,
    88,
    49,
    70,
    6,
    102,
    232,
    221,
    240,
    27,
    73,
    235,
    181,
    19,
    132,
    140,
    201,
    235,
    1,
    74,
    76,
    50,
    43,
    58,
    251,
    191,
    10,
    242,
    26,
    144,
    41,
    18,
    8,
    1,
    121,
    73,
    74,
    220,
    18,
    148,
    27,
    195,
    219,
    196,
    16,
    103,
    255,
    64,
    75,
    77,
    251,
    1,
    164,
    34,
    237,
    4,
    16,
    126,
    175,
    142,
    35,
    129,
    161,
    50,
    196,
    33,
    2,
    100,
    12,
    5,
    116,
    219,
    186,
    11,
    224,
    14,
    126,
    111,
    0,
    128,
    251,
    47,
    68,
    40,
    247,
    34,
    69,
    181,
    173,
    180,
    211,
    189,
    149,
    105,
    77,
    100,
    90,
    107,
    36,
    196,
    31,
    80,
    49,
    18,
    36,
    69,
    155,
    112,
    143,
    3,
    227,
    206,
    100,
    125,
    0,
    72,
    152,
    108,
    59,
    66,
    66,
    35,
    151,
    101,
    76,
    239,
    37,
    199,
    89,
    150,
    17,
    213,
  ],
  "postKey": CryptoKey {
    Symbol(kKeyObject): SecretKeyObject {
      Symbol(kKeyType): "secret",
    },
    Symbol(kAlgorithm): {
      "length": 256,
      "name": "AES-GCM",
    },
    Symbol(kExtractable): true,
    Symbol(kKeyUsages): [
      "encrypt",
      "decrypt",
    ],
  },
}
`;

exports[`v37 E2E encryption > parsed 1`] = `
{
  "author": OkImpl {
    "err": false,
    "ok": true,
    "val": SomeImpl {
      "none": false,
      "some": true,
      "val": ProfileIdentifier {
        "network": "localhost",
        "userId": "bob",
      },
    },
  },
  "authorPublicKey": OkImpl {
    "err": false,
    "ok": true,
    "val": SomeImpl {
      "none": false,
      "some": true,
      "val": {
        "algr": 2,
        "key": CryptoKey {},
      },
    },
  },
  "encrypted": OkImpl {
    "err": false,
    "ok": true,
    "val": Uint8Array [
      80,
      49,
      18,
      36,
      69,
      155,
      112,
      143,
      3,
      227,
      206,
      100,
      125,
      0,
      72,
      152,
      108,
      59,
      66,
      66,
      35,
      151,
      101,
      76,
      239,
      37,
      199,
      89,
      150,
      17,
      213,
    ],
  },
  "encryption": OkImpl {
    "err": false,
    "ok": true,
    "val": {
      "ephemeralPublicKey": {
        "2": OkImpl {
          "err": false,
          "ok": true,
          "val": {
            "algr": 2,
            "key": CryptoKey {},
          },
        },
      },
      "iv": OkImpl {
        "err": false,
        "ok": true,
        "val": Uint8Array [
          103,
          255,
          64,
          75,
          77,
          251,
          1,
          164,
          34,
          237,
          4,
          16,
          126,
          175,
          142,
          35,
        ],
      },
      "ownersAESKeyEncrypted": OkImpl {
        "err": false,
        "ok": true,
        "val": Uint8Array [
          227,
          181,
          31,
          230,
          197,
          123,
          88,
          49,
          70,
          6,
          102,
          232,
          221,
          240,
          27,
          73,
          235,
          181,
          19,
          132,
          140,
          201,
          235,
          1,
          74,
          76,
          50,
          43,
          58,
          251,
          191,
          10,
          242,
          26,
          144,
          41,
          18,
          8,
          1,
          121,
          73,
          74,
          220,
          18,
          148,
          27,
          195,
          219,
        ],
      },
      "type": "E2E",
    },
  },
  "signature": OkImpl {
    "err": false,
    "ok": true,
    "val": NoneImpl {
      "none": true,
      "some": false,
    },
  },
  "version": -37,
}
`;

exports[`v37 E2E encryption: append target to joey 1`] = `
Map {
  ProfileIdentifier {
    "network": "localhost",
    "userId": "joey",
  } => Object {
    "status": "fulfilled",
    "value": Object {
      "encryptedPostKey": Uint8Array [ a69db582d0ddb50c4d55625e92f862ef65627ce9ade025340b0a2d130ac3aa66263b96803b5c5d7130889d91fa8ae3da ],
      "ephemeralPublicKey": CryptoKey { [opaque crypto key material] },
      "target": ProfileIdentifier {
        "network": "localhost",
        "userId": "joey",
      },
    },
  },
}
`;

exports[`v37 E2E encryption: decrypted as author 1`] = `
Array [
  Object {
    "event": "E2E",
    "type": "progress",
  },
  Object {
    "content": Object {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v37 E2E encryption: decrypted as jack 1`] = `
Array [
  Object {
    "event": "E2E",
    "type": "progress",
  },
  Object {
    "content": Object {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v37 E2E encryption: decrypted as joey 1`] = `
Array [
  Object {
    "event": "E2E",
    "type": "progress",
  },
  Object {
    "content": Object {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v37 E2E encryption: encrypted 1`] = `
Object {
  "author": ProfileIdentifier {
    "network": "localhost",
    "userId": "bob",
  },
  "e2e": Map {
    ProfileIdentifier {
      "network": "localhost",
      "userId": "jack",
    } => Object {
      "status": "fulfilled",
      "value": Object {
        "encryptedPostKey": Uint8Array [ 2efdd4b0b30e637e0a5477269e9ffe0603739d0b2dc381b20ac256cf897b822cc6a8263039bf8a56c723528b8919a336 ],
        "target": ProfileIdentifier {
          "network": "localhost",
          "userId": "jack",
        },
      },
    },
  },
  "identifier": PostIVIdentifier {
    "network": "localhost",
    "postIV": "Z/9AS037AaQi7QQQfq+OIw==",
  },
  "output": Uint8Array [ 009700a96c6f63616c686f7374a3626f6202c42103fbdd1a19eeb484e44ced760c141ff185b4bef2eb8998a052054cb7e4548716bf9401c430e3b51fe6c57b5831460666e8ddf01b49ebb513848cc9eb014a4c322b3afbbf0af21a902912080179494adc12941bc3dbc41067ff404b4dfb01a422ed04107eaf8e2381a132c42102640c0574dbba0be00e7e6f0080fb2f4428f72245b5adb4d3bd95694d645a6b24c41f50311224459b708f03e3ce647d0048986c3b42422397654cef25c7599611d5 ],
  "postKey": CryptoKey { [opaque crypto key material] },
}
`;

exports[`v37 E2E encryption: parsed 1`] = `
Object {
  "author": Ok(Some(ProfileIdentifier {
    "network": "localhost",
    "userId": "bob",
  })),
  "authorPublicKey": Ok(Some(Object {
    "algr": 2,
    "key": CryptoKey { [opaque crypto key material] },
  })),
  "encrypted": Ok(Uint8Array [ 50311224459b708f03e3ce647d0048986c3b42422397654cef25c7599611d5 ]),
  "encryption": Ok(Object {
    "ephemeralPublicKey": Object {
      "2": Ok(Object {
        "algr": 2,
        "key": CryptoKey { [opaque crypto key material] },
      }),
    },
    "iv": Ok(Uint8Array [ 67ff404b4dfb01a422ed04107eaf8e23 ]),
    "ownersAESKeyEncrypted": Ok(Uint8Array [ e3b51fe6c57b5831460666e8ddf01b49ebb513848cc9eb014a4c322b3afbbf0af21a902912080179494adc12941bc3db ]),
    "type": "E2E",
  }),
  "signature": Ok(None),
  "version": -37,
}
`;

exports[`v37 public encryption > full v37 1`] = `
{
  "author": ProfileIdentifier {
    "network": "localhost",
    "userId": "alice",
  },
  "e2e": undefined,
  "identifier": PostIVIdentifier {
    "network": "localhost",
    "postIV": "AAECAwQFBgcICQoLDA0ODw==",
  },
  "output": Uint8Array [
    0,
    151,
    0,
    169,
    108,
    111,
    99,
    97,
    108,
    104,
    111,
    115,
    116,
    165,
    97,
    108,
    105,
    99,
    101,
    2,
    196,
    33,
    2,
    175,
    219,
    85,
    96,
    10,
    190,
    135,
    73,
    185,
    68,
    70,
    147,
    119,
    167,
    140,
    77,
    96,
    82,
    43,
    182,
    72,
    66,
    204,
    240,
    130,
    10,
    34,
    83,
    70,
    168,
    229,
    140,
    147,
    0,
    196,
    32,
    37,
    24,
    107,
    68,
    172,
    164,
    154,
    121,
    183,
    73,
    187,
    141,
    195,
    163,
    156,
    92,
    95,
    227,
    139,
    13,
    32,
    34,
    85,
    183,
    66,
    37,
    141,
    87,
    77,
    99,
    121,
    161,
    196,
    16,
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    196,
    98,
    69,
    41,
    211,
    215,
    209,
    11,
    169,
    19,
    50,
    148,
    40,
    24,
    10,
    244,
    134,
    200,
    103,
    248,
    205,
    242,
    80,
    215,
    125,
    150,
    218,
    155,
    250,
    142,
    220,
    54,
    26,
    22,
    7,
    77,
    127,
    131,
    224,
    206,
    139,
    254,
    73,
    176,
    49,
    178,
    57,
    235,
    73,
    168,
    172,
    13,
    123,
    60,
    198,
    239,
    145,
    157,
    180,
    147,
    245,
    29,
    28,
    209,
    74,
    99,
    11,
    250,
    6,
    157,
    124,
    164,
    161,
    209,
    39,
    25,
    18,
    142,
    114,
    123,
    44,
    169,
    217,
    47,
    149,
    114,
    255,
    53,
    177,
    233,
    119,
    160,
    92,
    217,
    83,
    31,
    241,
    131,
    176,
    110,
  ],
  "postKey": CryptoKey {
    Symbol(kKeyObject): SecretKeyObject {
      Symbol(kKeyType): "secret",
    },
    Symbol(kAlgorithm): {
      "length": 256,
      "name": "AES-GCM",
    },
    Symbol(kExtractable): true,
    Symbol(kKeyUsages): [
      "encrypt",
      "decrypt",
    ],
  },
}
`;

exports[`v37 public encryption > full v37 decrypted 1`] = `
[
  {
    "content": {
      "items": [
        {
          "content": "hi",
          "meta": undefined,
          "serializable": true,
          "type": "text",
          "version": 1,
        },
        {
          "content": "text 2",
          "meta": undefined,
          "serializable": true,
          "type": "text",
          "version": 1,
        },
      ],
      "meta": {
        "io.plugin.something": {
          "dict": {
            "a": [
              1,
              2,
            ],
            "b": true,
            "c": false,
          },
          "nul": null,
          "num": 2345,
          "str": "123",
        },
      },
      "type": "tuple",
    },
    "type": "success",
  },
]
`;

exports[`v37 public encryption > full v37 parsed 1`] = `
{
  "author": OkImpl {
    "err": false,
    "ok": true,
    "val": SomeImpl {
      "none": false,
      "some": true,
      "val": ProfileIdentifier {
        "network": "localhost",
        "userId": "alice",
      },
    },
  },
  "authorPublicKey": OkImpl {
    "err": false,
    "ok": true,
    "val": SomeImpl {
      "none": false,
      "some": true,
      "val": {
        "algr": 2,
        "key": CryptoKey {},
      },
    },
  },
  "encrypted": OkImpl {
    "err": false,
    "ok": true,
    "val": Uint8Array [
      69,
      41,
      211,
      215,
      209,
      11,
      169,
      19,
      50,
      148,
      40,
      24,
      10,
      244,
      134,
      200,
      103,
      248,
      205,
      242,
      80,
      215,
      125,
      150,
      218,
      155,
      250,
      142,
      220,
      54,
      26,
      22,
      7,
      77,
      127,
      131,
      224,
      206,
      139,
      254,
      73,
      176,
      49,
      178,
      57,
      235,
      73,
      168,
      172,
      13,
      123,
      60,
      198,
      239,
      145,
      157,
      180,
      147,
      245,
      29,
      28,
      209,
      74,
      99,
      11,
      250,
      6,
      157,
      124,
      164,
      161,
      209,
      39,
      25,
      18,
      142,
      114,
      123,
      44,
      169,
      217,
      47,
      149,
      114,
      255,
      53,
      177,
      233,
      119,
      160,
      92,
      217,
      83,
      31,
      241,
      131,
      176,
      110,
    ],
  },
  "encryption": OkImpl {
    "err": false,
    "ok": true,
    "val": {
      "AESKey": OkImpl {
        "err": false,
        "ok": true,
        "val": CryptoKey {
          Symbol(kKeyObject): SecretKeyObject {
            Symbol(kKeyType): "secret",
          },
          Symbol(kAlgorithm): {
            "length": 256,
            "name": "AES-GCM",
          },
          Symbol(kExtractable): true,
          Symbol(kKeyUsages): [
            "encrypt",
            "decrypt",
          ],
        },
      },
      "iv": OkImpl {
        "err": false,
        "ok": true,
        "val": Uint8Array [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
        ],
      },
      "type": "public",
    },
  },
  "signature": OkImpl {
    "err": false,
    "ok": true,
    "val": NoneImpl {
      "none": true,
      "some": false,
    },
  },
  "version": -37,
}
`;

exports[`v37 public encryption > minimal v37 1`] = `
{
  "author": ProfileIdentifier {
    "network": "localhost",
    "userId": "alice",
  },
  "e2e": undefined,
  "identifier": PostIVIdentifier {
    "network": "localhost",
    "postIV": "AAECAwQFBgcICQoLDA0ODw==",
  },
  "output": Uint8Array [
    0,
    151,
    0,
    169,
    108,
    111,
    99,
    97,
    108,
    104,
    111,
    115,
    116,
    165,
    97,
    108,
    105,
    99,
    101,
    192,
    192,
    147,
    0,
    196,
    32,
    37,
    24,
    107,
    68,
    172,
    164,
    154,
    121,
    183,
    73,
    187,
    141,
    195,
    163,
    156,
    92,
    95,
    227,
    139,
    13,
    32,
    34,
    85,
    183,
    66,
    37,
    141,
    87,
    77,
    99,
    121,
    161,
    196,
    16,
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    196,
    31,
    67,
    40,
    120,
    190,
    53,
    212,
    172,
    19,
    60,
    147,
    43,
    31,
    1,
    249,
    40,
    90,
    37,
    199,
    254,
    9,
    67,
    30,
    99,
    116,
    160,
    99,
    250,
    141,
    191,
    138,
    195,
  ],
  "postKey": CryptoKey {
    Symbol(kKeyObject): SecretKeyObject {
      Symbol(kKeyType): "secret",
    },
    Symbol(kAlgorithm): {
      "length": 256,
      "name": "AES-GCM",
    },
    Symbol(kExtractable): true,
    Symbol(kKeyUsages): [
      "encrypt",
      "decrypt",
    ],
  },
}
`;

exports[`v37 public encryption > minimal v37 decrypted 1`] = `
[
  {
    "content": {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v37 public encryption > minimal v37 parsed 1`] = `
{
  "author": OkImpl {
    "err": false,
    "ok": true,
    "val": SomeImpl {
      "none": false,
      "some": true,
      "val": ProfileIdentifier {
        "network": "localhost",
        "userId": "alice",
      },
    },
  },
  "authorPublicKey": OkImpl {
    "err": false,
    "ok": true,
    "val": NoneImpl {
      "none": true,
      "some": false,
    },
  },
  "encrypted": OkImpl {
    "err": false,
    "ok": true,
    "val": Uint8Array [
      67,
      40,
      120,
      190,
      53,
      212,
      172,
      19,
      60,
      147,
      43,
      31,
      1,
      249,
      40,
      90,
      37,
      199,
      254,
      9,
      67,
      30,
      99,
      116,
      160,
      99,
      250,
      141,
      191,
      138,
      195,
    ],
  },
  "encryption": OkImpl {
    "err": false,
    "ok": true,
    "val": {
      "AESKey": OkImpl {
        "err": false,
        "ok": true,
        "val": CryptoKey {
          Symbol(kKeyObject): SecretKeyObject {
            Symbol(kKeyType): "secret",
          },
          Symbol(kAlgorithm): {
            "length": 256,
            "name": "AES-GCM",
          },
          Symbol(kExtractable): true,
          Symbol(kKeyUsages): [
            "encrypt",
            "decrypt",
          ],
        },
      },
      "iv": OkImpl {
        "err": false,
        "ok": true,
        "val": Uint8Array [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
        ],
      },
      "type": "public",
    },
  },
  "signature": OkImpl {
    "err": false,
    "ok": true,
    "val": NoneImpl {
      "none": true,
      "some": false,
    },
  },
  "version": -37,
}
`;

exports[`v37 public encryption: full v37 1`] = `
Object {
  "author": ProfileIdentifier {
    "network": "localhost",
    "userId": "alice",
  },
  "e2e": undefined,
  "identifier": PostIVIdentifier {
    "network": "localhost",
    "postIV": "AAECAwQFBgcICQoLDA0ODw==",
  },
  "output": Uint8Array [ 009700a96c6f63616c686f7374a5616c69636502c42102afdb55600abe8749b944469377a78c4d60522bb64842ccf0820a225346a8e58c9300c42025186b44aca49a79b749bb8dc3a39c5c5fe38b0d202255b742258d574d6379a1c410000102030405060708090a0b0c0d0e0fc4624529d3d7d10ba913329428180af486c867f8cdf250d77d96da9bfa8edc361a16074d7f83e0ce8bfe49b031b239eb49a8ac0d7b3cc6ef919db493f51d1cd14a630bfa069d7ca4a1d12719128e727b2ca9d92f9572ff35b1e977a05cd9531ff183b06e ],
  "postKey": CryptoKey { [opaque crypto key material] },
}
`;

exports[`v37 public encryption: full v37 decrypted 1`] = `
Array [
  Object {
    "content": Object {
      "items": Array [
        Object {
          "content": "hi",
          "meta": undefined,
          "serializable": true,
          "type": "text",
          "version": 1,
        },
        Object {
          "content": "text 2",
          "meta": undefined,
          "serializable": true,
          "type": "text",
          "version": 1,
        },
      ],
      "meta": Object {
        "io.plugin.something": Object {
          "dict": Object {
            "a": Array [
              1,
              2,
            ],
            "b": true,
            "c": false,
          },
          "nul": null,
          "num": 2345,
          "str": "123",
        },
      },
      "type": "tuple",
    },
    "type": "success",
  },
]
`;

exports[`v37 public encryption: full v37 parsed 1`] = `
Object {
  "author": Ok(Some(ProfileIdentifier {
    "network": "localhost",
    "userId": "alice",
  })),
  "authorPublicKey": Ok(Some(Object {
    "algr": 2,
    "key": CryptoKey { [opaque crypto key material] },
  })),
  "encrypted": Ok(Uint8Array [ 4529d3d7d10ba913329428180af486c867f8cdf250d77d96da9bfa8edc361a16074d7f83e0ce8bfe49b031b239eb49a8ac0d7b3cc6ef919db493f51d1cd14a630bfa069d7ca4a1d12719128e727b2ca9d92f9572ff35b1e977a05cd9531ff183b06e ]),
  "encryption": Ok(Object {
    "AESKey": Ok(CryptoKey { [opaque crypto key material] }),
    "iv": Ok(Uint8Array [ 000102030405060708090a0b0c0d0e0f ]),
    "type": "public",
  }),
  "signature": Ok(None),
  "version": -37,
}
`;

exports[`v37 public encryption: minimal v37 1`] = `
Object {
  "author": ProfileIdentifier {
    "network": "localhost",
    "userId": "alice",
  },
  "e2e": undefined,
  "identifier": PostIVIdentifier {
    "network": "localhost",
    "postIV": "AAECAwQFBgcICQoLDA0ODw==",
  },
  "output": Uint8Array [ 009700a96c6f63616c686f7374a5616c696365c0c09300c42025186b44aca49a79b749bb8dc3a39c5c5fe38b0d202255b742258d574d6379a1c410000102030405060708090a0b0c0d0e0fc41f432878be35d4ac133c932b1f01f9285a25c7fe09431e6374a063fa8dbf8ac3 ],
  "postKey": CryptoKey { [opaque crypto key material] },
}
`;

exports[`v37 public encryption: minimal v37 decrypted 1`] = `
Array [
  Object {
    "content": Object {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v37 public encryption: minimal v37 parsed 1`] = `
Object {
  "author": Ok(Some(ProfileIdentifier {
    "network": "localhost",
    "userId": "alice",
  })),
  "authorPublicKey": Ok(None),
  "encrypted": Ok(Uint8Array [ 432878be35d4ac133c932b1f01f9285a25c7fe09431e6374a063fa8dbf8ac3 ]),
  "encryption": Ok(Object {
    "AESKey": Ok(CryptoKey { [opaque crypto key material] }),
    "iv": Ok(Uint8Array [ 000102030405060708090a0b0c0d0e0f ]),
    "type": "public",
  }),
  "signature": Ok(None),
  "version": -37,
}
`;

exports[`v38 E2E encryption > append target to joey 1`] = `
Map {
  ProfileIdentifier {
    "network": "localhost",
    "userId": "joey",
  } => {
    "status": "fulfilled",
    "value": {
      "encryptedPostKey": Uint8Array [
        232,
        205,
        228,
        28,
        150,
        132,
        158,
        146,
        55,
        6,
        141,
        186,
        123,
        199,
        119,
        96,
        27,
        49,
        184,
        69,
        135,
        242,
        164,
        154,
        155,
        14,
        32,
        223,
        104,
        226,
        204,
        86,
        114,
        5,
        22,
        151,
        43,
        234,
        249,
        221,
        227,
        46,
        26,
        60,
        55,
        152,
        69,
        46,
        238,
        103,
        208,
        254,
        79,
        53,
        130,
        6,
        176,
        97,
        58,
        104,
        133,
        70,
        225,
        233,
        224,
        145,
        128,
        5,
        217,
        29,
        27,
        2,
        221,
        188,
        74,
        16,
        49,
        127,
        93,
        171,
        161,
        237,
        193,
        245,
        160,
        169,
        193,
        242,
        63,
        179,
        114,
        183,
        41,
        29,
        188,
        122,
        38,
        50,
        42,
        229,
        57,
        49,
        74,
        224,
        100,
        46,
        255,
        16,
        60,
        173,
        158,
        66,
        78,
        5,
        177,
        66,
        37,
        248,
        79,
        137,
        102,
        124,
        235,
        69,
        183,
        4,
        254,
        5,
        94,
        37,
        147,
        217,
        15,
        68,
        131,
        195,
        139,
        136,
      ],
      "ivToBePublished": Uint8Array [
        103,
        255,
        64,
        75,
        77,
        251,
        1,
        164,
        34,
        237,
        4,
        16,
        126,
        175,
        142,
        35,
      ],
      "target": ProfileIdentifier {
        "network": "localhost",
        "userId": "joey",
      },
    },
  },
}
`;

exports[`v38 E2E encryption > decrypted as author 1`] = `
[
  {
    "content": {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v38 E2E encryption > decrypted as jack 1`] = `
[
  {
    "event": "E2E",
    "type": "progress",
  },
  {
    "content": {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v38 E2E encryption > decrypted as joey 1`] = `
[
  {
    "event": "E2E",
    "type": "progress",
  },
  {
    "content": {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v38 E2E encryption > encrypted 1`] = `
{
  "author": ProfileIdentifier {
    "network": "localhost",
    "userId": "bob",
  },
  "e2e": Map {
    ProfileIdentifier {
      "network": "localhost",
      "userId": "jack",
    } => {
      "status": "fulfilled",
      "value": {
        "encryptedPostKey": Uint8Array [
          54,
          154,
          13,
          13,
          243,
          35,
          63,
          240,
          109,
          162,
          100,
          123,
          74,
          91,
          88,
          212,
          142,
          199,
          248,
          194,
          158,
          228,
          44,
          122,
          129,
          82,
          111,
          50,
          45,
          204,
          78,
          32,
          58,
          199,
          188,
          114,
          245,
          110,
          57,
          109,
          83,
          68,
          208,
          187,
          107,
          68,
          58,
          195,
          105,
          192,
          163,
          130,
          188,
          84,
          96,
          14,
          60,
          154,
          14,
          163,
          250,
          26,
          11,
          60,
          205,
          30,
          113,
          95,
          126,
          201,
          176,
          188,
          181,
          50,
          195,
          41,
          7,
          168,
          13,
          76,
          150,
          162,
          6,
          35,
          168,
          52,
          53,
          228,
          122,
          24,
          220,
          38,
          54,
          81,
          213,
          23,
          24,
          119,
          63,
          157,
          80,
          213,
          163,
          215,
          84,
          9,
          195,
          242,
          108,
          189,
          111,
          237,
          94,
          162,
          82,
          52,
          0,
          127,
          109,
          26,
          4,
          55,
          47,
          86,
          231,
          207,
          86,
          243,
          162,
          249,
          203,
          87,
          68,
          29,
          244,
          221,
          99,
          4,
        ],
        "ivToBePublished": Uint8Array [
          150,
          164,
          124,
          165,
          4,
          65,
          142,
          140,
          96,
          64,
          241,
          15,
          128,
          231,
          32,
          186,
        ],
        "target": ProfileIdentifier {
          "network": "localhost",
          "userId": "jack",
        },
      },
    },
  },
  "identifier": PostIVIdentifier {
    "network": "localhost",
    "postIV": "Z/9AS037AaQi7QQQfq+OIw==",
  },
  "output": "🎼4/4|ze6k+g+ozWUy6n7x2o781Az0uvcnaCV9yioJX9becu2U+DEvm3WwAHvnAalsWE3pZ5A6tDEnJ5ind6u2TZ3UnxFIHnpNuUwafW6hmE96pXdAo3FbPjtccSx2rXNGemLhmc1nAPTUVIkDgvSWaWDV2yN+LotSpIXYta/R9nxVozk4l6cUjFd5YKUO|Z/9AS037AaQi7QQQfq+OIw==|q1TVIE/Xa49R+MXl/IIHVZD7HFXJncTWgre5|_|A/vdGhnutITkTO12DBQf8YW0vvLriZigUgVMt+RUhxa/|0|bG9jYWxob3N0L2JvYg==:||",
  "postKey": CryptoKey {
    Symbol(kKeyObject): SecretKeyObject {
      Symbol(kKeyType): "secret",
    },
    Symbol(kAlgorithm): {
      "length": 256,
      "name": "AES-GCM",
    },
    Symbol(kExtractable): true,
    Symbol(kKeyUsages): [
      "encrypt",
      "decrypt",
    ],
  },
}
`;

exports[`v38 E2E encryption > parsed 1`] = `
{
  "author": OkImpl {
    "err": false,
    "ok": true,
    "val": SomeImpl {
      "none": false,
      "some": true,
      "val": ProfileIdentifier {
        "network": "localhost",
        "userId": "bob",
      },
    },
  },
  "authorPublicKey": OkImpl {
    "err": false,
    "ok": true,
    "val": SomeImpl {
      "none": false,
      "some": true,
      "val": {
        "algr": 2,
        "key": CryptoKey {},
      },
    },
  },
  "encrypted": OkImpl {
    "err": false,
    "ok": true,
    "val": Uint8Array [
      171,
      84,
      213,
      32,
      79,
      215,
      107,
      143,
      81,
      248,
      197,
      229,
      252,
      130,
      7,
      85,
      144,
      251,
      28,
      85,
      201,
      157,
      196,
      214,
      130,
      183,
      185,
    ],
  },
  "encryption": OkImpl {
    "err": false,
    "ok": true,
    "val": {
      "ephemeralPublicKey": {},
      "iv": OkImpl {
        "err": false,
        "ok": true,
        "val": Uint8Array [
          103,
          255,
          64,
          75,
          77,
          251,
          1,
          164,
          34,
          237,
          4,
          16,
          126,
          175,
          142,
          35,
        ],
      },
      "ownersAESKeyEncrypted": OkImpl {
        "err": false,
        "ok": true,
        "val": Uint8Array [
          205,
          238,
          164,
          250,
          15,
          168,
          205,
          101,
          50,
          234,
          126,
          241,
          218,
          142,
          252,
          212,
          12,
          244,
          186,
          247,
          39,
          104,
          37,
          125,
          202,
          42,
          9,
          95,
          214,
          222,
          114,
          237,
          148,
          248,
          49,
          47,
          155,
          117,
          176,
          0,
          123,
          231,
          1,
          169,
          108,
          88,
          77,
          233,
          103,
          144,
          58,
          180,
          49,
          39,
          39,
          152,
          167,
          119,
          171,
          182,
          77,
          157,
          212,
          159,
          17,
          72,
          30,
          122,
          77,
          185,
          76,
          26,
          125,
          110,
          161,
          152,
          79,
          122,
          165,
          119,
          64,
          163,
          113,
          91,
          62,
          59,
          92,
          113,
          44,
          118,
          173,
          115,
          70,
          122,
          98,
          225,
          153,
          205,
          103,
          0,
          244,
          212,
          84,
          137,
          3,
          130,
          244,
          150,
          105,
          96,
          213,
          219,
          35,
          126,
          46,
          139,
          82,
          164,
          133,
          216,
          181,
          175,
          209,
          246,
          124,
          85,
          163,
          57,
          56,
          151,
          167,
          20,
          140,
          87,
          121,
          96,
          165,
          14,
        ],
      },
      "type": "E2E",
    },
  },
  "signature": OkImpl {
    "err": false,
    "ok": true,
    "val": NoneImpl {
      "none": true,
      "some": false,
    },
  },
  "version": -38,
}
`;

exports[`v38 E2E encryption: append target to joey 1`] = `
Map {
  ProfileIdentifier {
    "network": "localhost",
    "userId": "joey",
  } => Object {
    "status": "fulfilled",
    "value": Object {
      "encryptedPostKey": Uint8Array [ e8cde41c96849e9237068dba7bc777601b31b84587f2a49a9b0e20df68e2cc56720516972beaf9dde32e1a3c3798452eee67d0fe4f358206b0613a688546e1e9e0918005d91d1b02ddbc4a10317f5daba1edc1f5a0a9c1f23fb372b7291dbc7a26322ae539314ae0642eff103cad9e424e05b14225f84f89667ceb45b704fe055e2593d90f4483c38b88 ],
      "ivToBePublished": Uint8Array [ 67ff404b4dfb01a422ed04107eaf8e23 ],
      "target": ProfileIdentifier {
        "network": "localhost",
        "userId": "joey",
      },
    },
  },
}
`;

exports[`v38 E2E encryption: decrypted as author 1`] = `
Array [
  Object {
    "content": Object {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v38 E2E encryption: decrypted as jack 1`] = `
Array [
  Object {
    "event": "E2E",
    "type": "progress",
  },
  Object {
    "content": Object {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v38 E2E encryption: decrypted as joey 1`] = `
Array [
  Object {
    "event": "E2E",
    "type": "progress",
  },
  Object {
    "content": Object {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v38 E2E encryption: encrypted 1`] = `
Object {
  "author": ProfileIdentifier {
    "network": "localhost",
    "userId": "bob",
  },
  "e2e": Map {
    ProfileIdentifier {
      "network": "localhost",
      "userId": "jack",
    } => Object {
      "status": "fulfilled",
      "value": Object {
        "encryptedPostKey": Uint8Array [ 369a0d0df3233ff06da2647b4a5b58d48ec7f8c29ee42c7a81526f322dcc4e203ac7bc72f56e396d5344d0bb6b443ac369c0a382bc54600e3c9a0ea3fa1a0b3ccd1e715f7ec9b0bcb532c32907a80d4c96a20623a83435e47a18dc263651d51718773f9d50d5a3d75409c3f26cbd6fed5ea25234007f6d1a04372f56e7cf56f3a2f9cb57441df4dd6304 ],
        "ivToBePublished": Uint8Array [ 96a47ca504418e8c6040f10f80e720ba ],
        "target": ProfileIdentifier {
          "network": "localhost",
          "userId": "jack",
        },
      },
    },
  },
  "identifier": PostIVIdentifier {
    "network": "localhost",
    "postIV": "Z/9AS037AaQi7QQQfq+OIw==",
  },
  "output": "🎼4/4|ze6k+g+ozWUy6n7x2o781Az0uvcnaCV9yioJX9becu2U+DEvm3WwAHvnAalsWE3pZ5A6tDEnJ5ind6u2TZ3UnxFIHnpNuUwafW6hmE96pXdAo3FbPjtccSx2rXNGemLhmc1nAPTUVIkDgvSWaWDV2yN+LotSpIXYta/R9nxVozk4l6cUjFd5YKUO|Z/9AS037AaQi7QQQfq+OIw==|q1TVIE/Xa49R+MXl/IIHVZD7HFXJncTWgre5|_|A/vdGhnutITkTO12DBQf8YW0vvLriZigUgVMt+RUhxa/|0|bG9jYWxob3N0L2JvYg==:||",
  "postKey": CryptoKey { [opaque crypto key material] },
}
`;

exports[`v38 E2E encryption: parsed 1`] = `
Object {
  "author": Ok(Some(ProfileIdentifier {
    "network": "localhost",
    "userId": "bob",
  })),
  "authorPublicKey": Ok(Some(Object {
    "algr": 2,
    "key": CryptoKey { [opaque crypto key material] },
  })),
  "encrypted": Ok(Uint8Array [ ab54d5204fd76b8f51f8c5e5fc82075590fb1c55c99dc4d682b7b9 ]),
  "encryption": Ok(Object {
    "ephemeralPublicKey": Object {},
    "iv": Ok(Uint8Array [ 67ff404b4dfb01a422ed04107eaf8e23 ]),
    "ownersAESKeyEncrypted": Ok(Uint8Array [ cdeea4fa0fa8cd6532ea7ef1da8efcd40cf4baf72768257dca2a095fd6de72ed94f8312f9b75b0007be701a96c584de967903ab431272798a777abb64d9dd49f11481e7a4db94c1a7d6ea1984f7aa57740a3715b3e3b5c712c76ad73467a62e199cd6700f4d454890382f4966960d5db237e2e8b52a485d8b5afd1f67c55a3393897a7148c577960a50e ]),
    "type": "E2E",
  }),
  "signature": Ok(None),
  "version": -38,
}
`;

exports[`v38 public encryption > full v38 1`] = `
{
  "author": ProfileIdentifier {
    "network": "localhost",
    "userId": "alice",
  },
  "e2e": undefined,
  "identifier": PostIVIdentifier {
    "network": "localhost",
    "postIV": "AAECAwQFBgcICQoLDA0ODw==",
  },
  "output": "🎼4/4|oEHPyYfuDpTZBp+oUpe8ChOpRJCf5CdAv8kD2NieQtbN+h4VkT+5oI44GNkCmNh6JfVmCV4V5Qtrc7IsU2tNDS9WZNWHfqjtvA14s1UHGi2Yschz9o3WwC+0tRiCfRcUAXunzP+volvqd8wNkfwqfMEou3capIT5kzQdw31RihId0xXWHjwUqzYu|AAECAwQFBgcICQoLDA0ODw==|uE2/uj+YtxNuiCBQW+q3jLZKHXRAQDxYmpia|_|Aq/bVWAKvodJuURGk3enjE1gUiu2SELM8IIKIlNGqOWM|1|bG9jYWxob3N0L2FsaWNl:||",
  "postKey": CryptoKey {
    Symbol(kKeyObject): SecretKeyObject {
      Symbol(kKeyType): "secret",
    },
    Symbol(kAlgorithm): {
      "length": 256,
      "name": "AES-GCM",
    },
    Symbol(kExtractable): true,
    Symbol(kKeyUsages): [
      "encrypt",
      "decrypt",
    ],
  },
}
`;

exports[`v38 public encryption > full v38 decrypted 1`] = `
[
  {
    "content": {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v38 public encryption > full v38 parsed 1`] = `
{
  "author": OkImpl {
    "err": false,
    "ok": true,
    "val": SomeImpl {
      "none": false,
      "some": true,
      "val": ProfileIdentifier {
        "network": "localhost",
        "userId": "alice",
      },
    },
  },
  "authorPublicKey": OkImpl {
    "err": false,
    "ok": true,
    "val": SomeImpl {
      "none": false,
      "some": true,
      "val": {
        "algr": 2,
        "key": CryptoKey {},
      },
    },
  },
  "encrypted": OkImpl {
    "err": false,
    "ok": true,
    "val": Uint8Array [
      184,
      77,
      191,
      186,
      63,
      152,
      183,
      19,
      110,
      136,
      32,
      80,
      91,
      234,
      183,
      140,
      182,
      74,
      29,
      116,
      64,
      64,
      60,
      88,
      154,
      152,
      154,
    ],
  },
  "encryption": OkImpl {
    "err": false,
    "ok": true,
    "val": {
      "AESKey": OkImpl {
        "err": false,
        "ok": true,
        "val": CryptoKey {
          Symbol(kKeyObject): SecretKeyObject {
            Symbol(kKeyType): "secret",
          },
          Symbol(kAlgorithm): {
            "length": 256,
            "name": "AES-GCM",
          },
          Symbol(kExtractable): true,
          Symbol(kKeyUsages): [
            "encrypt",
            "decrypt",
          ],
        },
      },
      "iv": OkImpl {
        "err": false,
        "ok": true,
        "val": Uint8Array [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
        ],
      },
      "type": "public",
    },
  },
  "signature": OkImpl {
    "err": false,
    "ok": true,
    "val": NoneImpl {
      "none": true,
      "some": false,
    },
  },
  "version": -38,
}
`;

exports[`v38 public encryption > minimal v38 1`] = `
{
  "author": ProfileIdentifier {
    "network": "localhost",
    "userId": "alice",
  },
  "e2e": undefined,
  "identifier": PostIVIdentifier {
    "network": "localhost",
    "postIV": "AAECAwQFBgcICQoLDA0ODw==",
  },
  "output": "🎼4/4|oEHPyYfuDpTZBp+oUpe8ChOpRJCf5CdAv8kD2NieQtbN+h4VkT+5oI44GNkCmNh6JfVmCV4V5Qtrc7IsU2tNDS9WZNWHfqjtvA14s1UHGi2Yschz9o3WwC+0tRiCfRcUAXunzP+volvqd8wNkfwqfMEou3capIT5kzQdw31RihId0xXWHjwUqzYu|AAECAwQFBgcICQoLDA0ODw==|uE2/uj+YtxNuiCBQW+q3jLZKHXRAQDxYmpia|_||1|bG9jYWxob3N0L2FsaWNl:||",
  "postKey": CryptoKey {
    Symbol(kKeyObject): SecretKeyObject {
      Symbol(kKeyType): "secret",
    },
    Symbol(kAlgorithm): {
      "length": 256,
      "name": "AES-GCM",
    },
    Symbol(kExtractable): true,
    Symbol(kKeyUsages): [
      "encrypt",
      "decrypt",
    ],
  },
}
`;

exports[`v38 public encryption > minimal v38 decrypted 1`] = `
[
  {
    "content": {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v38 public encryption > minimal v38 parsed 1`] = `
{
  "author": OkImpl {
    "err": false,
    "ok": true,
    "val": SomeImpl {
      "none": false,
      "some": true,
      "val": ProfileIdentifier {
        "network": "localhost",
        "userId": "alice",
      },
    },
  },
  "authorPublicKey": OkImpl {
    "err": false,
    "ok": true,
    "val": NoneImpl {
      "none": true,
      "some": false,
    },
  },
  "encrypted": OkImpl {
    "err": false,
    "ok": true,
    "val": Uint8Array [
      184,
      77,
      191,
      186,
      63,
      152,
      183,
      19,
      110,
      136,
      32,
      80,
      91,
      234,
      183,
      140,
      182,
      74,
      29,
      116,
      64,
      64,
      60,
      88,
      154,
      152,
      154,
    ],
  },
  "encryption": OkImpl {
    "err": false,
    "ok": true,
    "val": {
      "AESKey": OkImpl {
        "err": false,
        "ok": true,
        "val": CryptoKey {
          Symbol(kKeyObject): SecretKeyObject {
            Symbol(kKeyType): "secret",
          },
          Symbol(kAlgorithm): {
            "length": 256,
            "name": "AES-GCM",
          },
          Symbol(kExtractable): true,
          Symbol(kKeyUsages): [
            "encrypt",
            "decrypt",
          ],
        },
      },
      "iv": OkImpl {
        "err": false,
        "ok": true,
        "val": Uint8Array [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
        ],
      },
      "type": "public",
    },
  },
  "signature": OkImpl {
    "err": false,
    "ok": true,
    "val": NoneImpl {
      "none": true,
      "some": false,
    },
  },
  "version": -38,
}
`;

exports[`v38 public encryption: full v38 1`] = `
Object {
  "author": ProfileIdentifier {
    "network": "localhost",
    "userId": "alice",
  },
  "e2e": undefined,
  "identifier": PostIVIdentifier {
    "network": "localhost",
    "postIV": "AAECAwQFBgcICQoLDA0ODw==",
  },
  "output": "🎼4/4|oEHPyYfuDpTZBp+oUpe8ChOpRJCf5CdAv8kD2NieQtbN+h4VkT+5oI44GNkCmNh6JfVmCV4V5Qtrc7IsU2tNDS9WZNWHfqjtvA14s1UHGi2Yschz9o3WwC+0tRiCfRcUAXunzP+volvqd8wNkfwqfMEou3capIT5kzQdw31RihId0xXWHjwUqzYu|AAECAwQFBgcICQoLDA0ODw==|uE2/uj+YtxNuiCBQW+q3jLZKHXRAQDxYmpia|_|Aq/bVWAKvodJuURGk3enjE1gUiu2SELM8IIKIlNGqOWM|1|bG9jYWxob3N0L2FsaWNl:||",
  "postKey": CryptoKey { [opaque crypto key material] },
}
`;

exports[`v38 public encryption: full v38 decrypted 1`] = `
Array [
  Object {
    "content": Object {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v38 public encryption: full v38 parsed 1`] = `
Object {
  "author": Ok(Some(ProfileIdentifier {
    "network": "localhost",
    "userId": "alice",
  })),
  "authorPublicKey": Ok(Some(Object {
    "algr": 2,
    "key": CryptoKey { [opaque crypto key material] },
  })),
  "encrypted": Ok(Uint8Array [ b84dbfba3f98b7136e8820505beab78cb64a1d7440403c589a989a ]),
  "encryption": Ok(Object {
    "AESKey": Ok(CryptoKey { [opaque crypto key material] }),
    "iv": Ok(Uint8Array [ 000102030405060708090a0b0c0d0e0f ]),
    "type": "public",
  }),
  "signature": Ok(None),
  "version": -38,
}
`;

exports[`v38 public encryption: minimal v38 1`] = `
Object {
  "author": ProfileIdentifier {
    "network": "localhost",
    "userId": "alice",
  },
  "e2e": undefined,
  "identifier": PostIVIdentifier {
    "network": "localhost",
    "postIV": "AAECAwQFBgcICQoLDA0ODw==",
  },
  "output": "🎼4/4|oEHPyYfuDpTZBp+oUpe8ChOpRJCf5CdAv8kD2NieQtbN+h4VkT+5oI44GNkCmNh6JfVmCV4V5Qtrc7IsU2tNDS9WZNWHfqjtvA14s1UHGi2Yschz9o3WwC+0tRiCfRcUAXunzP+volvqd8wNkfwqfMEou3capIT5kzQdw31RihId0xXWHjwUqzYu|AAECAwQFBgcICQoLDA0ODw==|uE2/uj+YtxNuiCBQW+q3jLZKHXRAQDxYmpia|_||1|bG9jYWxob3N0L2FsaWNl:||",
  "postKey": CryptoKey { [opaque crypto key material] },
}
`;

exports[`v38 public encryption: minimal v38 decrypted 1`] = `
Array [
  Object {
    "content": Object {
      "content": "hello world",
      "meta": undefined,
      "serializable": true,
      "type": "text",
      "version": 1,
    },
    "type": "success",
  },
]
`;

exports[`v38 public encryption: minimal v38 parsed 1`] = `
Object {
  "author": Ok(Some(ProfileIdentifier {
    "network": "localhost",
    "userId": "alice",
  })),
  "authorPublicKey": Ok(None),
  "encrypted": Ok(Uint8Array [ b84dbfba3f98b7136e8820505beab78cb64a1d7440403c589a989a ]),
  "encryption": Ok(Object {
    "AESKey": Ok(CryptoKey { [opaque crypto key material] }),
    "iv": Ok(Uint8Array [ 000102030405060708090a0b0c0d0e0f ]),
    "type": "public",
  }),
  "signature": Ok(None),
  "version": -38,
}
`;
