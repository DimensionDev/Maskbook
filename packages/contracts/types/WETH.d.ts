/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from 'bn.js'
import { Contract, ContractOptions } from 'web3-eth-contract'
import { EventLog } from 'web3-core'
import { EventEmitter } from 'events'
import { ContractEvent, Callback, TransactionObject, BlockType } from './types'

interface EventOptions {
    filter?: object
    fromBlock?: BlockType
    topics?: string[]
}

export class WETH extends Contract {
    constructor(jsonInterface: any[], address?: string, options?: ContractOptions)
    clone(): WETH
    methods: {
        name(): TransactionObject<string>

        approve(guy: string, wad: number | string): TransactionObject<boolean>

        totalSupply(): TransactionObject<string>

        transferFrom(src: string, dst: string, wad: number | string): TransactionObject<boolean>

        withdraw(wad: number | string): TransactionObject<void>

        decimals(): TransactionObject<string>

        balanceOf(arg0: string): TransactionObject<string>

        symbol(): TransactionObject<string>

        transfer(dst: string, wad: number | string): TransactionObject<boolean>

        deposit(): TransactionObject<void>

        allowance(arg0: string, arg1: string): TransactionObject<string>
    }
    events: {
        Approval: ContractEvent<{
            src: string
            guy: string
            wad: string
            0: string
            1: string
            2: string
        }>
        Transfer: ContractEvent<{
            src: string
            dst: string
            wad: string
            0: string
            1: string
            2: string
        }>
        Deposit: ContractEvent<{
            dst: string
            wad: string
            0: string
            1: string
        }>
        Withdrawal: ContractEvent<{
            src: string
            wad: string
            0: string
            1: string
        }>
        allEvents: (options?: EventOptions, cb?: Callback<EventLog>) => EventEmitter
    }
}
