{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 7,
        "sourceType": "module",
        "project": "./tsconfig.eslint.json",
        "warnOnUnsupportedTypeScriptVersion": false
    },
    "extends": ["../.eslintrc.json", "plugin:import/typescript"],
    "plugins": ["@typescript-eslint", "@dimensiondev", "unused-imports", "import", "unicorn", "react", "react-hooks"],
    "rules": {
        "no-restricted-imports": [
            "error",
            {
                "paths": [
                    { "name": "lodash", "message": "Please use lodash-unified instead." },
                    { "name": "lodash-es", "message": "Please use lodash-unified instead." },
                    { "name": "date-fns", "message": "Please use date-fns/{submodule} instead." },
                    { "name": "date-fns/esm", "message": "Please use date-fns/{submodule} instead." },
                    { "name": "idb", "message": "Please use idb/with-async-ittr instead." },
                    { "name": "idb/with-async-ittr-cjs", "message": "Please use idb/with-async-ittr instead." },
                    { "name": "@masknet/typed-message/base", "message": "Please use @masknet/typed-message instead." },
                    {
                        "name": "@dimensiondev/holoflows-kit/es",
                        "message": "Please use @dimensiondev/holoflows-kit instead."
                    }
                ]
            }
        ],
        "yoda": "error",
        "radix": "error",
        "eqeqeq": ["error", "always"],
        "spaced-comment": ["error", "always", { "line": { "markers": ["/"] } }],
        "no-cond-assign": "error",
        "no-constant-condition": "error",
        "no-extra-boolean-cast": "error",
        "no-script-url": "error",
        "no-throw-literal": "error",
        "no-unmodified-loop-condition": "error",
        "no-unneeded-ternary": "error",
        "no-useless-concat": "error",
        "no-loss-of-precision": "error",
        "prefer-regex-literals": "error",
        "react/jsx-boolean-value": "error",
        "react/jsx-curly-brace-presence": ["warn", { "props": "never", "children": "never" }],
        "react/jsx-key": "error",
        "react/no-invalid-html-attribute": "error",
        "react/no-unknown-property": "error",
        "react/self-closing-comp": ["warn", { "component": true, "html": true }],
        "react-hooks/exhaustive-deps": "off",
        "react-hooks/rules-of-hooks": "error",
        "import/no-deprecated": "off",
        "import/no-duplicates": "error",
        "unicorn/better-regex": "error",
        "unicorn/catch-error-name": ["error", { "ignore": ["^err$"] }],
        "unicorn/no-instanceof-array": "error",
        "unicorn/no-new-array": "error",
        "unicorn/no-new-buffer": "error",
        "unicorn/no-thenable": "error",
        "unicorn/no-useless-promise-resolve-reject": "error",
        "unicorn/prefer-add-event-listener": "error",
        "unicorn/prefer-date-now": "error",
        "unicorn/prefer-dom-node-dataset": "error",
        "unicorn/prefer-number-properties": "error",
        "unicorn/relative-url-style": ["error", "always"],
        "unicorn/throw-new-error": "error",
        "@dimensiondev/browser/prefer-location-assign": "error",
        "@dimensiondev/jsx/no-class-component": "error",
        "@dimensiondev/jsx/no-template-literal": "error",
        "@dimensiondev/no-number-constructor": "off",
        "@dimensiondev/prefer-early-return": "error",
        "@dimensiondev/string/no-interpolation": "off",
        "@dimensiondev/array/no-implicit-sort": "error",
        "@dimensiondev/string/no-locale-case": "error",
        "@dimensiondev/string/no-simple-template-literal": "error",
        "@dimensiondev/string/no-unneeded-to-string": "error",
        "@dimensiondev/type/no-bigint": "error",
        "@dimensiondev/type/no-instanceof-wrapper": "error",
        "@dimensiondev/type/no-wrapper-type-reference": "error",
        "@dimensiondev/unicode/specific-set": "error",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/no-base-to-string": "off",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-invalid-this": "error",
        "@typescript-eslint/no-loop-func": "error",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/prefer-enum-initializers": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/prefer-literal-enum-member": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-reduce-type-parameter": "error",
        "@typescript-eslint/prefer-regexp-exec": "off",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/restrict-template-expressions": "off"
    },
    "overrides": [
        {
            "files": ["./plugins/**/*"],
            "rules": {
                "@typescript-eslint/no-explicit-any": "error"
            }
        }
    ]
}
