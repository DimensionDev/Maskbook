name: Build

on:
  push:
    branches: [master, develop, released]
  pull_request:
    branches: [master, develop, released]

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      WEB3_CONSTANTS_RPC: ${{ secrets.WEB3_CONSTANTS_RPC }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    steps:
      - name: Get cache date
        id: get-date
        run: echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: actions/setup-node@v2
      - name: Restore pnpm cache
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-node-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Restore TypeScript incremental build cache
        uses: actions/cache@v2
        with:
          path: packages/**/dist
          # actions/cache will not upload changes in cache if primary key hits
          # by adding date to the primary key, we can ensure the cache updates on the first build of the day
          key: ${{ runner.os }}-tsc-v2-${{ hashFiles('packages/**/tsconfig.json') }}-${{ hashFiles('pnpm-lock.yaml') }}-${{ steps.get-date.outputs.date }}
          # Allow fallback to cache of different dependencies but not allowing fallback to different tsconfig
          # because that might indicates a structural/flags changes in tsc emit.
          restore-keys: |
            ${{ runner.os }}-tsc-v2-${{ hashFiles('packages/**/tsconfig.json') }}-${{ hashFiles('pnpm-lock.yaml') }}
            ${{ runner.os }}-tsc-v2-${{ hashFiles('packages/**/tsconfig.json') }}
      - name: Restore Webpack cache
        uses: actions/cache@v2
        with:
          path: packages/maskbook/node_modules/.cache/webpack
          key: ${{ runner.os }}-extension-${{ hashFiles('pnpm-lock.yaml') }}-${{ steps.get-date.outputs.date }}
          # Not fallback to different dependencies. Webpack seems like have bug.
          # An example caused by the webpack cache bug: https://github.com/facebook/react/issues/21587
          restore-keys: ${{ runner.os }}-extension-${{ hashFiles('pnpm-lock.yaml') }}
      - run: npx pnpm install
      - run: npx gulp build-ci
      - name: Upload `Maskbook.base.zip`
        uses: actions/upload-artifact@v2
        with:
          name: Maskbook.base.zip
          path: Maskbook.base.zip
      - name: Upload `Maskbook.iOS.zip`
        uses: actions/upload-artifact@v2
        with:
          name: Maskbook.iOS.zip
          path: Maskbook.iOS.zip
      - name: Upload `Maskbook.chromium.zip`
        uses: actions/upload-artifact@v2
        with:
          name: Maskbook.chromium.zip
          path: Maskbook.chromium.zip
      - name: Upload `Maskbook.chromium-beta.zip`
        uses: actions/upload-artifact@v2
        with:
          name: Maskbook.chromium-beta.zip
          path: Maskbook.chromium-beta.zip
      - name: Upload `Maskbook.firefox.zip`
        uses: actions/upload-artifact@v2
        with:
          name: Maskbook.firefox.zip
          path: Maskbook.firefox.zip
      - name: Upload `Maskbook.gecko.zip`
        uses: actions/upload-artifact@v2
        with:
          name: Maskbook.gecko.zip
          path: Maskbook.gecko.zip
