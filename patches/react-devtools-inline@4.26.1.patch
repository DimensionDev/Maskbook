diff --git a/dist/backend.js b/dist/backend.js
index a85aa70b11038efb838237ec4ead44ab12d8a7ee..dbf5d8e28aa3c44ba2ef3f291278325589c192f0 100644
--- a/dist/backend.js
+++ b/dist/backend.js
@@ -138,7 +138,7 @@ module.exports = require("react");
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 const CHROME_WEBSTORE_EXTENSION_ID = 'fmkadmapgofadopljbjfkapdkoienihi';
 const INTERNAL_EXTENSION_ID = 'dnjnjgbfilfphmojnmhliehogmojhclc';
@@ -506,7 +506,7 @@ const COMPACT_LINE_HEIGHT = parseInt(THEME_STYLES.compact['--line-height-data'],
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 function localStorageGetItem(key) {
   try {
@@ -560,7 +560,7 @@ function sessionStorageSetItem(key, value) {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 const meta = {
@@ -957,7 +957,7 @@ function upgradeUnserializable(destination, source) {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 /************************************************************************
@@ -1308,7 +1308,7 @@ module.exports = require("react-is");
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 const isArray = Array.isArray;
 /* harmony default export */ __webpack_exports__["a"] = (isArray);
@@ -1342,7 +1342,7 @@ const isArray = Array.isArray;
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 // WARNING
 // The values below are referenced by ComponentFilters (which are saved via localStorage).
@@ -1404,7 +1404,7 @@ const StrictMode = 1;
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 
@@ -1676,7 +1676,7 @@ var esm = __webpack_require__(43);
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 // Get the window object for the document that a node belongs to,
 // or return null if it cannot be found (node not attached to DOM,
@@ -1789,7 +1789,7 @@ function getElementDimensions(domElement) {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 const Overlay_assign = Object.assign; // Note that the Overlay components are not affected by the active Theme,
@@ -2058,7 +2058,7 @@ const overlayStyles = {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 const SHOW_DURATION = 2000;
@@ -2111,7 +2111,7 @@ function showOverlay(elements, componentName, agent, hideAfterTimeout) {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 
@@ -2141,7 +2141,7 @@ function setupHighlighter(bridge, agent) {
       window.addEventListener('mouseover', onMouseEvent, true);
       window.addEventListener('mouseup', onMouseEvent, true);
       window.addEventListener('pointerdown', onPointerDown, true);
-      window.addEventListener('pointerover', onPointerOver, true);
+      window.addEventListener('pointermove', onPointerMove, true);
       window.addEventListener('pointerup', onPointerUp, true);
     } else {
       agent.emit('startInspectingNative');
@@ -2168,7 +2168,7 @@ function setupHighlighter(bridge, agent) {
       window.removeEventListener('mouseover', onMouseEvent, true);
       window.removeEventListener('mouseup', onMouseEvent, true);
       window.removeEventListener('pointerdown', onPointerDown, true);
-      window.removeEventListener('pointerover', onPointerOver, true);
+      window.removeEventListener('pointermove', onPointerMove, true);
       window.removeEventListener('pointerup', onPointerUp, true);
     } else {
       agent.emit('stopInspectingNative');
@@ -2237,13 +2237,15 @@ function setupHighlighter(bridge, agent) {
   function onPointerDown(event) {
     event.preventDefault();
     event.stopPropagation();
-    selectFiberForNode(event.target);
+    selectFiberForNode(event.composed ? event.composedPath()[0] : event.target);
   }
 
-  function onPointerOver(event) {
+  let lastHoveredNode = null;
+  function onPointerMove(event) {
     event.preventDefault();
     event.stopPropagation();
-    const target = event.target;
+    const target = event.composed ? event.composedPath()[0] : event.target;
+    if (lastHoveredNode === target) return;
 
     if (target.tagName === 'IFRAME') {
       const iframe = target;
@@ -2288,7 +2290,7 @@ function setupHighlighter(bridge, agent) {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 const OUTLINE_COLOR = '#f0f0f0'; // Note these colors are in sync with DevTools Profiler chart colors.
 
@@ -2372,7 +2374,7 @@ function initialize() {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 
@@ -2496,7 +2498,7 @@ function _defineProperty(obj, key, value) { if (key in obj) { Object.definePrope
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 
@@ -3231,7 +3233,7 @@ var src_utils = __webpack_require__(3);
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 function decorate(object, attr, fn) {
   const old = object[attr];
@@ -3270,7 +3272,7 @@ function forceUpdate(instance) {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 
@@ -4323,7 +4325,7 @@ function renderer_attach(hook, rendererID, renderer, global) {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 
@@ -4417,7 +4419,7 @@ function initBackend(hook, agent, global) {
  * That's why we have to inline the whole event emitter implementation,
  * the string format implementation, and part of the console implementation here.
  *
- * 
+ *
  */
 
 function installHook(target) {
@@ -4926,7 +4928,7 @@ function installHook(target) {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 /**
@@ -5028,7 +5030,7 @@ var isArray = __webpack_require__(19);
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 
@@ -5467,7 +5469,7 @@ var external_react_is_ = __webpack_require__(15);
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 // ATTENTION
 // When adding new symbols to this file,
@@ -5530,7 +5532,7 @@ var isArray = __webpack_require__(19);
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 
@@ -6327,7 +6329,7 @@ function _defineProperty(obj, key, value) { if (key in obj) { Object.definePrope
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 const BATCH_DURATION = 100; // This message specifies the version of the DevTools protocol currently supported by the backend,
@@ -6497,7 +6499,7 @@ class Bridge extends _events__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"] {
     } // Queue the shutdown outgoing message for subscribers.
 
 
-    this.send('shutdown'); // Mark this bridge as destroyed, i.e. disable its public API.
+    this.emit('shutdown'); // Mark this bridge as destroyed, i.e. disable its public API.
 
     this._isShutdown = true; // Disable the API inherited from EventEmitter that can add more listeners and send more messages.
     // $FlowFixMe This property is not writable.
@@ -6546,7 +6548,7 @@ class Bridge extends _events__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"] {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 const isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
 
@@ -6595,7 +6597,7 @@ function _defineProperty(obj, key, value) { if (key in obj) { Object.definePrope
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 class EventEmitter {
   constructor() {
@@ -6731,7 +6733,7 @@ var simpleIsEqual = function simpleIsEqual(a, b) {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 
@@ -7060,7 +7062,7 @@ function castBrowserTheme(v) {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 const REACT_TOTAL_NUM_LANES = 31; // Increment this number any time a backwards breaking change is made to the profiler metadata.
@@ -9825,7 +9827,7 @@ process.umask = function () {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 // $FlowFixMe[method-unbinding]
 const hasOwnProperty = Object.prototype.hasOwnProperty;
@@ -9871,7 +9873,7 @@ var error_stack_parser_default = /*#__PURE__*/__webpack_require__.n(error_stack_
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 const assign_assign = Object.assign;
 /* harmony default export */ var shared_assign = (assign_assign);
@@ -9885,7 +9887,7 @@ var external_react_ = __webpack_require__(0);
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 const ReactSharedInternals = external_react_["__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED"];
@@ -9897,7 +9899,7 @@ const ReactSharedInternals = external_react_["__SECRET_INTERNALS_DO_NOT_USE_OR_Y
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 const ReactWorkTags_FunctionComponent = 0;
 const ReactWorkTags_ClassComponent = 1;
@@ -9936,7 +9938,7 @@ const HostSingleton = 27;
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 
@@ -10691,7 +10693,7 @@ function inspectHooksOfFiber(fiber, currentDispatcher, includeHooksSource = fals
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 
@@ -10719,7 +10721,7 @@ var DevToolsFeatureFlags_default = __webpack_require__(12);
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 /**
@@ -10747,7 +10749,7 @@ var isArray = __webpack_require__(19);
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 const cachedStyleNameToValueMap = new Map();
@@ -10859,7 +10861,7 @@ var DevToolsFiberComponentStack = __webpack_require__(72);
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 
@@ -11699,7 +11701,7 @@ function createProfilingHooks({
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 
 
@@ -15886,7 +15888,7 @@ var ReactSymbols = __webpack_require__(8);
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 // This is a DevTools fork of shared/ConsolePatchingDev.
 // The shared console patching code is DEV-only.
@@ -15987,7 +15989,7 @@ function reenableLogs() {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 // This is a DevTools fork of ReactComponentStackFrame.
 // This fork enables DevTools to use the same "native" component stack format,
@@ -16225,7 +16227,7 @@ function describeUnknownElementTypeFrameInDEV(type, ownerFn, currentDispatcherRe
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 // This is a DevTools fork of ReactFiberComponentStack.
 // This fork enables DevTools to use the same "native" component stack format,
@@ -16336,7 +16338,7 @@ function getStackByFiberInDevAndProd(workTagMap, workInProgress, currentDispatch
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * 
+ *
  */
 // This list should be kept updated to reflect additions to 'shared/ReactSymbols'.
 // DevTools can't import symbols from 'shared/ReactSymbols' directly for two reasons:
diff --git a/dist/frontend.js b/dist/frontend.js
index 083c82bf86d4f2c18830237cf258bc612c38a41a..0a22c363384e9eda4f71d0da68f1ad4841eb27f6 100644
--- a/dist/frontend.js
+++ b/dist/frontend.js
@@ -3509,7 +3509,7 @@ class Bridge extends _events__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"] {
     } // Queue the shutdown outgoing message for subscribers.
 
 
-    this.send('shutdown'); // Mark this bridge as destroyed, i.e. disable its public API.
+    this.emit('shutdown'); // Mark this bridge as destroyed, i.e. disable its public API.
 
     this._isShutdown = true; // Disable the API inherited from EventEmitter that can add more listeners and send more messages.
     // $FlowFixMe This property is not writable.