# generated by patch-package 6.5.0 on 2022-04-10 14:55:17
#
# command:
#   npx patch-package ts-results --exclude nothing
#
# declared package:
#   ts-results: 3.3.0
#
diff --git a/node_modules/ts-results/esm/index.js b/node_modules/ts-results/esm/index.js
index 5b8900d..0cf894b 100644
--- a/node_modules/ts-results/esm/index.js
+++ b/node_modules/ts-results/esm/index.js
@@ -1,3 +1,3 @@
-export * from './result';
-export * from './option';
+export * from './result.js';
+export * from './option.js';
 //# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/ts-results/esm/option.js b/node_modules/ts-results/esm/option.js
index c1cb8ec..537163c 100644
--- a/node_modules/ts-results/esm/option.js
+++ b/node_modules/ts-results/esm/option.js
@@ -1,5 +1,5 @@
-import { toString } from './utils';
-import { Ok, Err } from './result';
+import { toString } from './utils.js';
+import { Ok, Err } from './result.js';
 /**
  * Contains the None value
  */
diff --git a/node_modules/ts-results/esm/result.js b/node_modules/ts-results/esm/result.js
index 5a79d2a..0e92b8a 100644
--- a/node_modules/ts-results/esm/result.js
+++ b/node_modules/ts-results/esm/result.js
@@ -1,5 +1,5 @@
-import { toString } from './utils';
-import { None, Some } from './option';
+import { toString } from './utils.js';
+import { None, Some } from './option.js';
 /**
  * Contains the error value
  */
diff --git a/node_modules/ts-results/index.d.ts b/node_modules/ts-results/index.d.ts
index 3dca8ed..4685003 100644
--- a/node_modules/ts-results/index.d.ts
+++ b/node_modules/ts-results/index.d.ts
@@ -1,3 +1,3 @@
-export * from './result';
-export * from './option';
+export * from './result.js';
+export * from './option.js';
 //# sourceMappingURL=index.d.ts.map
diff --git a/node_modules/ts-results/option.d.ts b/node_modules/ts-results/option.d.ts
index 7fcb9a8..7daa9bd 100644
--- a/node_modules/ts-results/option.d.ts
+++ b/node_modules/ts-results/option.d.ts
@@ -1,4 +1,4 @@
-import { Result, Ok, Err } from './result';
+import { Result, Ok, Err } from './result.js';
 interface BaseOption<T> extends Iterable<T extends Iterable<infer U> ? U : never> {
     /** `true` when the Option is Some */ readonly some: boolean;
     /** `true` when the Option is None */ readonly none: boolean;
diff --git a/node_modules/ts-results/package.json b/node_modules/ts-results/package.json
index 6f35cbe..ba38fe3 100644
--- a/node_modules/ts-results/package.json
+++ b/node_modules/ts-results/package.json
@@ -2,8 +2,15 @@
   "name": "ts-results",
   "version": "3.3.0",
   "description": "A typescript implementation of Rust's Result and Option objects.",
-  "main": "index.js",
+  "type": "module",
+  "main": "./esm/index.js",
   "module": "./esm/index.js",
+  "exports": {
+    ".": {
+      "types": "./index.d.ts",
+      "default": "./esm/index.js"
+    }
+  },
   "types": "index.d.ts",
   "keywords": [
     "Rust",
diff --git a/node_modules/ts-results/result.d.ts b/node_modules/ts-results/result.d.ts
index d2a9815..6ffa649 100644
--- a/node_modules/ts-results/result.d.ts
+++ b/node_modules/ts-results/result.d.ts
@@ -1,4 +1,4 @@
-import { Option } from './option';
+import { Option } from './option.js';
 interface BaseResult<T, E> extends Iterable<T extends Iterable<infer U> ? U : never> {
     /** `true` when the result is Ok */ readonly ok: boolean;
     /** `true` when the result is Err */ readonly err: boolean;
