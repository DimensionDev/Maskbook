# generated by patch-package 6.7.0 on 2022-01-23 01:01:26
#
# command:
#   npx patch-package webpack
#
# declared package:
#   webpack: 5.67.0
#
diff --git a/node_modules/webpack/lib/async-modules/AwaitDependenciesInitFragment.js b/node_modules/webpack/lib/async-modules/AwaitDependenciesInitFragment.js
index ec7974d..ad0f543 100644
--- a/node_modules/webpack/lib/async-modules/AwaitDependenciesInitFragment.js
+++ b/node_modules/webpack/lib/async-modules/AwaitDependenciesInitFragment.js
@@ -50,7 +50,7 @@ class AwaitDependenciesInitFragment extends InitFragment {
 		if (promises.size === 1) {
 			for (const p of promises) {
 				return Template.asString([
-					`var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([${p}]);`,
+					`var ${p}, __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([${p}]);`,
 					`${p} = (__webpack_async_dependencies__.then ? await __webpack_async_dependencies__ : __webpack_async_dependencies__)[0];`,
 					""
 				]);
@@ -59,7 +59,7 @@ class AwaitDependenciesInitFragment extends InitFragment {
 		const sepPromises = Array.from(promises).join(", ");
 		// TODO check if destructuring is supported
 		return Template.asString([
-			`var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([${sepPromises}]);`,
+			`var ${sepPromises}, __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([${sepPromises}]);`,
 			`([${sepPromises}] = __webpack_async_dependencies__.then ? await __webpack_async_dependencies__ : __webpack_async_dependencies__);`,
 			""
 		]);
diff --git a/node_modules/webpack/lib/wasm-async/AsyncWebAssemblyJavascriptGenerator.js b/node_modules/webpack/lib/wasm-async/AsyncWebAssemblyJavascriptGenerator.js
index 90364d0..4599e95 100644
--- a/node_modules/webpack/lib/wasm-async/AsyncWebAssemblyJavascriptGenerator.js
+++ b/node_modules/webpack/lib/wasm-async/AsyncWebAssemblyJavascriptGenerator.js
@@ -161,7 +161,7 @@ class AsyncWebAssemblyJavascriptGenerator extends Generator {
 		const source = new RawSource(
 			promises.length > 0
 				? Template.asString([
-						`var __webpack_instantiate__ = ${runtimeTemplate.basicFunction(
+						`var ${promises.join(", ")}, __webpack_instantiate__ = ${runtimeTemplate.basicFunction(
 							`[${promises.join(", ")}]`,
 							`${importsCompatCode}return ${instantiateCall};`
 						)}`,
@@ -171,7 +171,7 @@ class AsyncWebAssemblyJavascriptGenerator extends Generator {
 							"__webpack_handle_async_dependencies__",
 							[
 								importsCode,
-								`var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([${promises.join(
+								`var ${promises.join(", ")}, __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([${promises.join(
 									", "
 								)}]);`,
 								"return __webpack_async_dependencies__.then ? __webpack_async_dependencies__.then(__webpack_instantiate__) : __webpack_instantiate__(__webpack_async_dependencies__);"
