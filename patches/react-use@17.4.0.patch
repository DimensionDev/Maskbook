diff --git a/CHANGELOG.md b/CHANGELOG.md
deleted file mode 100644
index 9b28df0e8aa4734af2c7006fd077ff17e2281db5..0000000000000000000000000000000000000000
diff --git a/esm/useAsyncFn.js b/esm/useAsyncFn.js
index 01d7307bd106229f6d791d0c588589235f404d97..872d4eea890cff495ced6fae8a91963d182164ee 100644
--- a/esm/useAsyncFn.js
+++ b/esm/useAsyncFn.js
@@ -13,15 +13,16 @@ export default function useAsyncFn(fn, deps, initialState) {
             args[_i] = arguments[_i];
         }
         var callId = ++lastCallId.current;
-        if (!state.loading) {
-            set(function (prevState) { return (__assign(__assign({}, prevState), { loading: true })); });
-        }
+        set(function (prevState) {
+          if (prevState.loading) return prevState
+          return (__assign(__assign({}, prevState), { loading: true })); 
+        });
         return fn.apply(void 0, args).then(function (value) {
             isMounted() && callId === lastCallId.current && set({ value: value, loading: false });
             return value;
         }, function (error) {
             isMounted() && callId === lastCallId.current && set({ error: error, loading: false });
-            return error;
+            throw error;
         });
     }, deps);
     return [state, callback];
diff --git a/lib/useAsyncFn.js b/lib/useAsyncFn.js
index e06fd819ccad625d709fa9907e946a9b8bc58543..e79a2214916f5319687b532c5366a70ae4dff6d9 100644
--- a/lib/useAsyncFn.js
+++ b/lib/useAsyncFn.js
@@ -15,15 +15,16 @@ function useAsyncFn(fn, deps, initialState) {
             args[_i] = arguments[_i];
         }
         var callId = ++lastCallId.current;
-        if (!state.loading) {
-            set(function (prevState) { return (tslib_1.__assign(tslib_1.__assign({}, prevState), { loading: true })); });
-        }
+        set(function (prevState) {
+          if (prevState.loading) return prevState
+          return (tslib_1.__assign(tslib_1.__assign({}, prevState), { loading: true })); 
+        });
         return fn.apply(void 0, args).then(function (value) {
             isMounted() && callId === lastCallId.current && set({ value: value, loading: false });
             return value;
         }, function (error) {
             isMounted() && callId === lastCallId.current && set({ error: error, loading: false });
-            return error;
+            throw error;
         });
     }, deps);
     return [state, callback];
