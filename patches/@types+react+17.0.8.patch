# generated by patch-package 6.4.7 on 2021-05-29 12:44:31
#
# command:
#   npx patch-package @types/react
#
# declared package:
#   @types/react: 17.0.8
#
diff --git a/node_modules/@types/react/experimental.d.ts b/node_modules/@types/react/experimental.d.ts
index 0e36001..71ee25c 100644
--- a/node_modules/@types/react/experimental.d.ts
+++ b/node_modules/@types/react/experimental.d.ts
@@ -1,3 +1,4 @@
+// Upstream: https://github.com/DefinitelyTyped/DefinitelyTyped/pull/53487
 /**
  * These are types for things that are present in the `experimental` builds of React but not yet
  * on a stable build.
@@ -104,7 +105,7 @@ declare module '.' {
      * @see https://reactjs.org/docs/concurrent-mode-reference.html#suspenselist
      * @see https://reactjs.org/docs/concurrent-mode-patterns.html#suspenselist
      */
-    export const unstable_SuspenseList: ExoticComponent<SuspenseListProps>;
+    export const SuspenseList: ExoticComponent<SuspenseListProps>;
 
     // must be synchronous
     export type TransitionFunction = () => VoidOrUndefinedOnly;
@@ -132,7 +133,7 @@ declare module '.' {
      *
      * @see https://reactjs.org/docs/concurrent-mode-reference.html#usedeferredvalue
      */
-    export function unstable_useDeferredValue<T>(value: T): T;
+    export function useDeferredValue<T>(value: T): T;
 
     /**
      * Allows components to avoid undesirable loading states by waiting for content to load
@@ -151,7 +152,7 @@ declare module '.' {
      *
      * @see https://reactjs.org/docs/concurrent-mode-reference.html#usetransition
      */
-    export function unstable_useTransition(): [boolean, TransitionStartFunction];
+    export function useTransition(): [boolean, TransitionStartFunction];
 
     const opaqueIdentifierBranding: unique symbol;
     /**
@@ -177,5 +178,5 @@ declare module '.' {
      *
      * @param callback A _synchronous_ function which causes state updates that can be deferred.
      */
-    export function unstable_startTransition(scope: TransitionFunction): void;
+    export function startTransition(scope: TransitionFunction): void;
 }
