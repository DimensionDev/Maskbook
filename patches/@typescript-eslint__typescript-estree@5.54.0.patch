diff --git a/dist/create-program/getWatchProgramsForProjects.js b/dist/create-program/getWatchProgramsForProjects.js
index 09e5ebeaab8b38f9eb7dabd8f1c2795a552a26a1..2c51a9470e2af6ebce0533314ce977e90e5f3b2c 100644
--- a/dist/create-program/getWatchProgramsForProjects.js
+++ b/dist/create-program/getWatchProgramsForProjects.js
@@ -105,6 +105,7 @@ function updateCachedFileList(tsconfigPath, program, parseSettings) {
     programFileListCache.set(tsconfigPath, fileList);
     return fileList;
 }
+let updatedProgram
 /**
  * Calculate project environments using options provided by consumer and paths from config
  * @param parseSettings Internal settings for parsing the file
@@ -139,7 +140,6 @@ function getWatchProgramsForProjects(parseSettings) {
             continue;
         }
         let fileList = programFileListCache.get(tsconfigPath);
-        let updatedProgram = null;
         if (!fileList) {
             updatedProgram = existingWatch.getProgram().getProgram();
             fileList = updateCachedFileList(tsconfigPath, updatedProgram, parseSettings);
@@ -201,7 +201,7 @@ const isRunningNoTimeoutFix = semver_1.default.satisfies(ts.version, '>=3.9.0-be
 function createWatchProgram(tsconfigPath, parseSettings) {
     log('Creating watch program for %s.', tsconfigPath);
     // create compiler host
-    const watchCompilerHost = ts.createWatchCompilerHost(tsconfigPath, (0, shared_1.createDefaultCompilerOptionsFromExtra)(parseSettings), ts.sys, ts.createAbstractBuilder, diagnosticReporter, 
+    const watchCompilerHost = ts.createWatchCompilerHost(tsconfigPath, (0, shared_1.createDefaultCompilerOptionsFromExtra)(parseSettings), ts.sys, ts.createAbstractBuilder, diagnosticReporter,
     /*reportWatchStatus*/ () => { });
     if (parseSettings.moduleResolver) {
         watchCompilerHost.resolveModuleNames = (0, shared_1.getModuleResolver)(parseSettings.moduleResolver).resolveModuleNames;